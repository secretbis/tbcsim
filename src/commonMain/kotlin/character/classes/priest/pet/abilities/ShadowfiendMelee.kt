package character.classes.priest.pet.abilities

import character.Ability
import character.auto.AutoAttackBase
import character.classes.priest.Priest
import character.classes.priest.pet.Shadowfiend
import character.Proc
import character.Resource
import character.Stats
import data.Constants
import data.model.Item
import data.model.ItemSet
import data.model.Socket
import data.model.SocketBonus
import mechanics.Spell
import mechanics.Melee
import sim.SimParticipant
import sim.*

class ShadowfiendMelee : AutoAttackBase() {
    companion object {
        const val name = "Melee (Shadowfiend)"
    }

    override val id: Int = 1
    override val name: String = Companion.name
    override val damageType = Constants.DamageType.SHADOW

    val basePetAttackSpeed: Double = 1500.0
    override fun item(sp: SimParticipant): Item {
        return object : Item() {
            override var isAutoGenerated: Boolean = false
            override var id: Int = -1
            override var name: String = "Melee (Shadowfiend)"
            override var itemLevel: Int = 1
            override var quality: Int = 1
            override var icon: String = ""
            override var itemSet: ItemSet? = null
            override var inventorySlot: Int = 21
            override var itemClass: Constants.ItemClass? = null
            override var itemSubclass: Constants.ItemSubclass? = null
            override var minDmg: Double = 99.0 + 0.12 * (sp.stats.attackPower.toDouble() - 286.0)
            override var maxDmg: Double = 123.0 + 0.12 * (sp.stats.attackPower.toDouble() - 286.0)
            override var speed: Double = basePetAttackSpeed
            override var stats: Stats = Stats()
            override var sockets: Array<Socket> = arrayOf()
            override var socketBonus: SocketBonus? = null
            override var phase = 1
        }
    }
}